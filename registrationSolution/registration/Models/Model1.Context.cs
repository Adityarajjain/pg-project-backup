//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace registration.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GeneralInsuranceFinalEntities_ : DbContext
    {
        public GeneralInsuranceFinalEntities_()
            : base("name=GeneralInsuranceFinalEntities_")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminDetailsTable> AdminDetailsTables { get; set; }
        public virtual DbSet<MotorClaimDetailsTable> MotorClaimDetailsTables { get; set; }
        public virtual DbSet<MotorInsuranceTable> MotorInsuranceTables { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TransactionTable> TransactionTables { get; set; }
        public virtual DbSet<TravelClaimDetailsTable> TravelClaimDetailsTables { get; set; }
        public virtual DbSet<TravelInsuranceTable> TravelInsuranceTables { get; set; }
        public virtual DbSet<UserDetailsTable> UserDetailsTables { get; set; }
        public virtual DbSet<VehicleListTable> VehicleListTables { get; set; }
    
        public virtual ObjectResult<string> proc_AdminLoginCheck(string uid, string pswd)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            var pswdParameter = pswd != null ?
                new ObjectParameter("pswd", pswd) :
                new ObjectParameter("pswd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_AdminLoginCheck", uidParameter, pswdParameter);
        }
    
        public virtual ObjectResult<string> proc_GetCarsOfManufacturer(string manu)
        {
            var manuParameter = manu != null ?
                new ObjectParameter("manu", manu) :
                new ObjectParameter("manu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_GetCarsOfManufacturer", manuParameter);
        }
    
        public virtual ObjectResult<string> proc_GetManufacturers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_GetManufacturers");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<double>> proc_GetBrandNewPrice(string manu, string model)
        {
            var manuParameter = manu != null ?
                new ObjectParameter("manu", manu) :
                new ObjectParameter("manu", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("proc_GetBrandNewPrice", manuParameter, modelParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> proc_GetLatestId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("proc_GetLatestId");
        }
    
        public virtual ObjectResult<Nullable<long>> proc_GetLatestTravelId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("proc_GetLatestTravelId");
        }
    
        public virtual ObjectResult<GetBrandNewPrice_Proc1_Result> GetBrandNewPrice_Proc1(Nullable<long> policyid, string manu, string model)
        {
            var policyidParameter = policyid.HasValue ?
                new ObjectParameter("policyid", policyid) :
                new ObjectParameter("policyid", typeof(long));
    
            var manuParameter = manu != null ?
                new ObjectParameter("manu", manu) :
                new ObjectParameter("manu", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrandNewPrice_Proc1_Result>("GetBrandNewPrice_Proc1", policyidParameter, manuParameter, modelParameter);
        }
    
        public virtual ObjectResult<Proc_MakeRenewalOfPolicy3_Result> Proc_MakeRenewalOfPolicy3(Nullable<long> policyid, Nullable<double> amount, Nullable<int> year)
        {
            var policyidParameter = policyid.HasValue ?
                new ObjectParameter("policyid", policyid) :
                new ObjectParameter("policyid", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_MakeRenewalOfPolicy3_Result>("Proc_MakeRenewalOfPolicy3", policyidParameter, amountParameter, yearParameter);
        }
    
        public virtual ObjectResult<Proj_Proc_UserPolicyDetailsDisplay2_Result> Proj_Proc_UserPolicyDetailsDisplay2(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proj_Proc_UserPolicyDetailsDisplay2_Result>("Proj_Proc_UserPolicyDetailsDisplay2", idParameter);
        }
    
        public virtual ObjectResult<proc_GetAllClaimsOfUser_Result> proc_GetAllClaimsOfUser(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllClaimsOfUser_Result>("proc_GetAllClaimsOfUser", mobileParameter);
        }
    
        public virtual ObjectResult<proc_GetAllPoliciesOfUser_Result> proc_GetAllPoliciesOfUser(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllPoliciesOfUser_Result>("proc_GetAllPoliciesOfUser", mobileParameter);
        }
    
        public virtual ObjectResult<proc_GetAllTravelClaimsOfUser_Result> proc_GetAllTravelClaimsOfUser(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllTravelClaimsOfUser_Result>("proc_GetAllTravelClaimsOfUser", mobileParameter);
        }
    
        public virtual ObjectResult<proc_GetAllTravelPoliciesOfUser_Result> proc_GetAllTravelPoliciesOfUser(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetAllTravelPoliciesOfUser_Result>("proc_GetAllTravelPoliciesOfUser", mobileParameter);
        }
    
        public virtual int proc_ApproveMotorClaim(Nullable<long> policyid, Nullable<int> amt, string admin)
        {
            var policyidParameter = policyid.HasValue ?
                new ObjectParameter("policyid", policyid) :
                new ObjectParameter("policyid", typeof(long));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var adminParameter = admin != null ?
                new ObjectParameter("admin", admin) :
                new ObjectParameter("admin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ApproveMotorClaim", policyidParameter, amtParameter, adminParameter);
        }
    }
}
